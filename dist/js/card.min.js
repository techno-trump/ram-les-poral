/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
!function() {

;// CONCATENATED MODULE: ./repo/js/libs/logger.js
const onlyErrorsToConsole = true;
const consoleLogs = true;
const consoleDebug = true;
const alertOnError = false;
const alertOnLog = false;
function log() {
  if (!onlyErrorsToConsole) {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (consoleLogs) console.log(...args);
    if (alertOnLog) alert(args.join(" :: "));
  }
}
function debug() {
  if (!onlyErrorsToConsole && consoleDebug) console.debug(...arguments);
}
function error() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }
  if (!onlyErrorsToConsole && consoleDebug) console.error(...args);
  if (alertOnError) alert(args.join(" :: "));
}
;// CONCATENATED MODULE: ./src/js/pages/card/sliders.js

function initCardsSlider(selector) {
  log("initCardsSlider::selector: ", selector);
  let slider;
  const mediaMatch = matchMedia("(max-width: 575px)");
  const handleMatch = _ref => {
    let {
      matches
    } = _ref;
    if (matches) {
      if (!slider) {
        slider = init();
      }
    } else if (slider && slider.initialized) {
      slider.destroy();
      slider = null;
    }
  };
  mediaMatch.addListener(handleMatch);
  handleMatch(mediaMatch);
  function init() {
    return new Swiper(selector, {
      observer: true,
      resizeObserver: true,
      slidesPerView: 1,
      grabCursor: true,
      autoplay: {
        delay: 5000
      }
    });
  }
}
function initWelcomeSlider() {
  return new Swiper("#welcome-slider", {
    observer: true,
    resizeObserver: true,
    slidesPerView: 1,
    grabCursor: true,
    loop: true,
    autoplay: {
      delay: 5000
    },
    navigation: {
      prevEl: "#welcome-slider-btn-prev",
      nextEl: "#welcome-slider-btn-next"
    },
    pagination: {
      el: "#welcome-slider-pagination",
      clickable: true
    }
  });
}
function initBundlesSlider(selector) {
  new Swiper(selector, {
    observer: true,
    resizeObserver: true,
    slidesPerView: 1,
    grabCursor: true,
    spaceBetween: 40,
    breakpoints: {
      "768": {
        slidesPerView: 2.2,
        spaceBetween: 60
      },
      "1400": {
        slidesPerView: 3,
        spaceBetween: 20
      }
    }
  });
}
function initSliders() {
  initWelcomeSlider();
  initBundlesSlider("#bundles-slider-under-roof");
  initBundlesSlider("#bundles-slider-under-key");
  initCardsSlider("#popular-slider");
}
;// CONCATENATED MODULE: ./repo/js/libs/tabs.js
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
const rootClass = "tabs";
const classes = {
  root: rootClass,
  controls: "".concat(rootClass, "__controls"),
  select: "".concat(rootClass, "__select"),
  panelsGroup: "".concat(rootClass, "__panels-group")
};
class Tabs {
  constructor(rootElem) {
    _defineProperty(this, "map", new Map());
    _defineProperty(this, "selectElems", []);
    _defineProperty(this, "tabElems", []);
    _defineProperty(this, "activeTabSelectElem", null);
    this.controlsElem = rootElem.querySelector(".".concat(classes.controls));
    this.selectElems = rootElem.querySelectorAll("[data-tab-select]");
    this.panelsGroupElem = rootElem.querySelector(".".concat(classes.panelsGroup));
    this.tabElems = this.panelsGroupElem.children;
    this.selectElems.forEach((selectElem, idx) => {
      if (!this.tabElems[idx]) return;
      this.map.set(selectElem, this.tabElems[idx]);
      if (selectElem.checked) {
        this.tabElems[idx].classList.add("active");
        this.activeTabSelectElem = selectElem;
      }
    });
    this.controlsElem.addEventListener("change", _ref => {
      let {
        target
      } = _ref;
      if (!this.map.has(target)) return;
      const tabToActivateElem = this.map.get(target);
      tabToActivateElem.classList.add("active");
      if (this.activeTabSelectElem !== target) {
        if (this.activeTabSelectElem instanceof HTMLElement) {
          const activeTabElem = this.map.get(this.activeTabSelectElem);
          activeTabElem.classList.remove("active");
        }
        this.activeTabSelectElem = target;
      }
    });
  }
}
function initTabs() {
  const rootElems = document.querySelectorAll("[data-tabs]");
  rootElems.forEach(init);
  function init(rootElem) {
    new Tabs(rootElem);
  }
}
;// CONCATENATED MODULE: ./src/js/shared/initCallbackRequestForm.js
function initCallbackRequestForm(formId) {
  let formType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "callback";
  // or "loan"
  const $form = $("#".concat(formId));
  const validator = $form.validate({
    ignore: [],
    highlight: function (element, errorClass, validClass) {
      $(element).closest(".form-field").addClass(errorClass);
    },
    unhighlight: function (element, errorClass, validClass) {
      $(element).closest(".form-field").removeClass(errorClass);
    },
    errorPlacement: function (error, element) {
      error.appendTo(element.closest(".form-field"));
    }
    // Отправляем данные на сервер
    // submitHandler: async function(form, event) {
    // 	event.preventDefault();
    // 	drawers.open("successful-callback-request");
    // const formData = new FormData(form);
    // const response = await fetch(``, {
    // 	method: "POST",
    // 	body: formData,
    // 	redirect: 'follow'
    // });
    // if (response.ok) {
    // 	drawers.open("successful-callback-request");
    // } else {
    // 	console.error("Ошибка при отпрвке/обработке формы запороса обратного звонка: status::" + response.status + ", statusText::" + response.statusText);
    // }
    //}
  });

  const $telInputElem = $form.find("input[name='tel']");
  const cleave = new Cleave($telInputElem.get(0), {
    numericOnly: true,
    blocks: [2, 3, 3, 2, 2],
    delimiters: [" (", ") ", "-", "-"],
    prefix: "+7",
    noImmediatePrefix: true
  });
  return validator;
}
;// CONCATENATED MODULE: ./src/js/pages/card/index.js




window.addEventListener("DOMContentLoaded", onLoaded);
function onLoaded() {
  initSliders();
  initTabs();
  initCallbackRequestForm("loan-callback-request-form", "loan");
}
}();
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
!function() {
// extracted by mini-css-extract-plugin

}();
/******/ })()
;